geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) %T>%
gsave(filename = "hist_area")
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
normalize
houses %>%
ggplot(aes(x = map_dbl(area, function(v) (v - mean(v)) / sd(v)), fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = map_dbl(area, function(.x) (.x - mean(.x)) / sd(.x)), fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
normalize <- function(v) (v - mean(v)) / sd(v)
houses %>%
ggplot(aes(x = normalize(area), fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = log(area), fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = andar, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos andares por cidade",
x = "Andar",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
(houses <- import("R/Dados/houses.csv",
setclass = "tibble",
encoding = "UTF-8") %>%
rename(
cidade = city,
quartos = rooms,
banheiros = bathroom,
vagas = `parking spaces`,
andar = floor,
mobiliado = furniture,
condominio = `hoa (R$)`,
aluguel = `rent amount (R$)`,
iptu = `property tax (R$)`,
seguro_incendio = `fire insurance (R$)`,
total = `total (R$)`
) %>%
mutate(
aceita_animal = if_else(animal == "acept", 1, 0),
animal = NULL,
andar = ifelse(andar == "-", 0, as.numeric(andar)),
mobiliado = if_else(mobiliado == "furnished", 1, 0),
cidade = factor(cidade)) %T>%
saveRDS("R/Dados/houses_full.Rds") %T>%
write_csv("R/Dados/houses_full.csv") %>%
filter(area < 500, aluguel < 10000, cidade != "Campinas", andar < 40) %>%
select(-iptu, -seguro_incendio, -total, -condominio) %T>%
saveRDS("R/Dados/houses_clean.Rds") %T>%
write_csv("R/Dados/houses_clean.csv")
)
houses %>%
ggplot(aes(x = andar, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos andares por cidade",
x = "Andar",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
library(tidyverse)
library(rio)
library(logger)
library(magrittr)
library(wesanderson)
library(glue)
(houses <- import("R/Dados/houses.csv",
setclass = "tibble",
encoding = "UTF-8") %>%
rename(
cidade = city,
quartos = rooms,
banheiros = bathroom,
vagas = `parking spaces`,
andar = floor,
mobiliado = furniture,
condominio = `hoa (R$)`,
aluguel = `rent amount (R$)`,
iptu = `property tax (R$)`,
seguro_incendio = `fire insurance (R$)`,
total = `total (R$)`
) %>%
mutate(
aceita_animal = if_else(animal == "acept", 1, 0),
animal = NULL,
andar = ifelse(andar == "-", 0, as.numeric(andar)),
mobiliado = if_else(mobiliado == "furnished", 1, 0),
cidade = factor(cidade)) %T>%
saveRDS("R/Dados/houses_full.Rds") %T>%
write_csv("R/Dados/houses_full.csv") %>%
filter(area < 500, aluguel < 10000, cidade != "Campinas", andar < 40) %>%
select(-iptu, -seguro_incendio, -total, -condominio) %T>%
saveRDS("R/Dados/houses_clean.Rds") %T>%
write_csv("R/Dados/houses_clean.csv")
)
houses %>%
ggplot(aes(x = andar, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos andares por cidade",
x = "Andar",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
library(tidyverse)
library(rio)
library(logger)
library(magrittr)
library(wesanderson)
library(glue)
(houses <- import("R/Dados/houses.csv",
setclass = "tibble",
encoding = "UTF-8") %>%
rename(
cidade = city,
quartos = rooms,
banheiros = bathroom,
vagas = `parking spaces`,
andar = floor,
mobiliado = furniture,
condominio = `hoa (R$)`,
aluguel = `rent amount (R$)`,
iptu = `property tax (R$)`,
seguro_incendio = `fire insurance (R$)`,
total = `total (R$)`
) %>%
mutate(
aceita_animal = if_else(animal == "acept", 1, 0),
animal = NULL,
andar = ifelse(andar == "-", 0, as.numeric(andar)),
mobiliado = if_else(mobiliado == "furnished", 1, 0),
cidade = factor(cidade)) %T>%
saveRDS("R/Dados/houses_full.Rds") %T>%
write_csv("R/Dados/houses_full.csv") %>%
filter(area < 500, aluguel < 10000, cidade != "Campinas", andar < 40) %>%
select(-iptu, -seguro_incendio, -total, -condominio) %T>%
saveRDS("R/Dados/houses_clean.Rds") %T>%
write_csv("R/Dados/houses_clean.csv")
)
normalize <- function(v) (v - mean(v)) / sd(v)
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = aluguel, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos aluguéis por cidade",
x = "Aluguel",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal)
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade)
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
subtitle = "Apartamentos disponíveis para aluguel em Março de 2020",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
houses %>%
ggplot(aes(x = area, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos apartamentos por área e cidade",
subtitle = "Apartamentos disponíveis para aluguel em Março de 2020",
x = "Área (M^2)",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
houses %>%
ggplot(aes(x = aluguel, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos aluguéis por cidade",
subtitle = "Apartamentos disponíveis para aluguel em Março de 2020",
x = "Aluguel",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
houses %>%
ggplot(aes(x = andar, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos andares por cidade",
subtitle = "Apartamentos disponíveis para aluguel em Março de 2020",
x = "Andar",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
houses %>%
ggplot(aes(x = andar, fill = cidade)) +
geom_histogram(aes(y = ..density..)) +
theme_minimal() +
labs(title = "Distribuição dos andares de apartamentos para aluguel",
subtitle = "Apartamentos disponíveis em Março de 2020",
x = "Andar",
y = "Densidade",
fill = "Cidade") +
scale_fill_manual(values = pal) +
facet_wrap(~ cidade) +
theme(legend.position = "none")
library(tidyverse)
library(magrittr)
library(wesanderson)
pal <- wes_palette("Cavalcanti1")
cor <- wes_palette("Cavalcanti1") %>%
pluck(1)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
(tibble(x = runif(1000, 0, 10),
y = 100 + 5*x - 2*x^2) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
(tibble(x = runif(1000, 0, 10),
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 3, sd = 2)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
(tibble(x = runif(1000, 0, 10),
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 5, sd = 4)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
(tibble(x = runif(1000, -10, 10),
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 5, sd = 4)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
(tibble(x = runif(1000, -10, 10),
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 5, sd = 10)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal()
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y") +
geom_smooth()
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 1.2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
install.packages("stargazer")
lm(y ~ x, data = data) -> modelo1
lm(y ~ x + x^2, data = data) -> modelo2
library(stargazer)
stargazer(modelo1, modelo2)
stargazer(modelo1, modelo2, align = TRUE, out = "tabelas/exemplo3.tex")
lm(y ~ x + x^2, data = data)
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 5, sd = 10)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
lm(y ~ x, data = data) -> modelo1
lm(y ~ x + x^2, data = data) -> modelo2
stargazer(modelo1, modelo2, align = TRUE, out = "tabelas/exemplo3.tex")
modelo2
lm(y ~ x + x2, data = data) -> modelo2
stargazer(modelo1, modelo2, align = TRUE, out = "tabelas/exemplo3.tex")
modelo2
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + rnorm(length(x), mean = 5, sd = 10)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
lm(y ~ x, data = data) -> modelo1
lm(y ~ x + x2, data = data) -> modelo2
stargazer(modelo1, modelo2, align = TRUE, out = "tabelas/exemplo3.tex")
stagazer(data)
stargazer(data)
library(tidyverse)
library(magrittr)
library(wesanderson)
library(stargazer)
pal <- wes_palette("Cavalcanti1")
cor <- wes_palette("Cavalcanti1") %>%
pluck(1)
(houses <- readRDS("R/Dados/houses_clean.Rds"))
houses %>%
summarise(across(area:aceita_animal, mean))
houses %>%
summarise(across(area:aceita_animal, mean),
across(area:aceita_animal, sd))
houses %>%
summarise(across(area:aceita_animal, mean))
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, mean))
library(knitr)
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, mean)) %>%
kable("latex")
file.create("tabelas/tabela_arvore_reg.tex")
tabela <- file("tabelas/tabela_arvore_reg.tex")
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, mean)) %>%
kable("latex") %>%
writeLines(tabela)
close(tabela)
tabela <- file("tabelas/tabela_arvore_reg.tex")
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, mean)) %>%
kable("latex") %>%
writeLines(tabela, useBytes = TRUE)
close(tabela)
tabela <- file("tabelas/tabela_arvore_reg.tex")
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, mean)) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
close(tabela)
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, function(v) round(mean(v), digits = 1))) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplo2.R', echo=TRUE)
library(randomForest)
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplo2.R', echo=TRUE)
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplo2.R', echo=TRUE)
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplo2.R', echo=TRUE)
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, function(v) round(mean(v), digits = 1))) %>%
kable("latex")
houses %>%
group_by(cidade) %>%
summarise(across(area:aceita_animal, function(v) round(mean(v), digits = 1)))
houses %>%
group_by(cidade) %>%
summarise(across(-aceita_animal, - mobiliado, -vagas,
function(v) round(mean(v), digits = 1))) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
houses %>%
group_by(cidade) %>%
summarise(across(-aceita_animal, - mobiliado, -vagas,
function(v) round(mean(v), digits = 1)))
houses %>%
group_by(cidade) %>%
summarise(across(c(-aceita_animal, - mobiliado, -vagas),
function(v) round(mean(v), digits = 1))) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
houses %>%
group_by(cidade) %>%
summarise(across(c(evertyhing(), -aceita_animal, - mobiliado, -vagas),
function(v) round(mean(v), digits = 1))) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
houses %>%
group_by(cidade) %>%
summarise(across(c(everything(), -aceita_animal, - mobiliado, -vagas),
function(v) round(mean(v), digits = 1))) %>%
kable("latex") %>%
enc2utf8() %>%
writeLines(tabela, useBytes = TRUE)
houses %>%
group_by(cidade) %>%
summarise(across(c(everything(), -aceita_animal, - mobiliado, -vagas),
function(v) round(mean(v), digits = 1)))
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplo2.R', echo=TRUE)
