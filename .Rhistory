models %>%
group_by(modelo) %>%
summarise(previsao_media = mean(predict),
desvio_padrao = sd(predict)) %>%
pivot_wider(values_from = previsao_media:desvio_padrao)
models %>%
ggplot(aes(x = predict, fill = modelo)) +
geom_density() +
labs(title = "Densidade das previsões para o apartamento, por modelo",
x = "Aluguel Presumido",
y = "Densidade") +
theme_minimal() +
scale_fill_manual(values = pal)
models %>%
group_by(modelo) %>%
summarise(previsao_media = mean(predict),
desvio_padrao = sd(predict)) %>%
pivot_wider(values_from = previsao_media:desvio_padrao) %>%
models %>%
ggplot(aes(x = predict, fill = modelo)) +
geom_density() +
labs(title = "Densidade das previsões para o apartamento, por modelo",
x = "Aluguel Presumido",
y = "Densidade") +
theme_minimal() +
scale_fill_manual(values = pal)
models %>%
group_by(modelo) %>%
summarise(previsao_media = mean(predict),
desvio_padrao = sd(predict)) %>%
pivot_wider(values_from = previsao_media:desvio_padrao)
models %>%
group_by(modelo) %>%
summarise(media = mean(predict),
SD = sd(predict)) %>%
pivot_wider(values_from = media:SD)
houses %>% filter(area > 80, area < 85, quartos == 2, banheiros == 1, cidade == "Rio de Janeiro")
houses %>% filter(area > 80, area < 85, quartos == 2, banheiros == 1, cidade == "Rio de Janeiro") %$% mean(aluguel)
lm(aluguel ~ ., data = houses) %>%
summary()
lm(log(aluguel) ~ ., data = houses) %>%
summary()
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + rnorm(length(x), sd = 15)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x + 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + rnorm(length(x), sd = 20)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(5, 10)",
x = "X",
y = "Y")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
png("imagens/exemplo3_dist.png")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
png("imagens/exemplo3_dist.png", width = 940, height = 678, res = 240)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
png("imagens/exemplo3_dist.png", width = 940, height = 678, res = 120)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*rnorm(length(x), sd = 20)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
y = 100 + 5*x - 2*x^2 + x*abs(rnorm(length(x), sd = 20)) ->
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*abs(rnorm(length(x), sd = 20))) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*2*abs(rnorm(length(x), sd = 20))) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*2*rnorm(length(x), sd = 20)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*rnorm(length(x), sd = 20)) ->
data)
data %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
lm(aluguel ~ ., data = data2)  %>%
stargazer(align = TRUE, out = "tabelas/exemplo_heteroskeda")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*rnorm(length(x), sd = 20)) ->
data2)
png("imagens/exemplo_heteroske.png", width = 940, height = 678, res = 120)
data2 %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
lm(aluguel ~ ., data = data2)  %>%
stargazer(align = TRUE, out = "tabelas/exemplo_heteroskeda")
lm(y ~ x, data = data2)  %>%
stargazer(align = TRUE, out = "tabelas/exemplo_heteroskeda")
lm(y ~ x, data = data2)  %>%
stargazer(align = TRUE, out = "tabelas/exemplo_heteroskeda.tex")
source('C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Scripts/exemplolinreg_nonlin_e_heterocedasticidade.R', encoding = 'UTF-8', echo=TRUE)
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*abs(rnorm(length(x), sd = 20))) ->
data2)
png("imagens/exemplo_heteroske.png", width = 940, height = 678, res = 120)
data2 %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + x*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + abs(x)*rnorm(length(x), sd = 20)) ->
data2)
png("imagens/exemplo_heteroske.png", width = 940, height = 678, res = 120)
data2 %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + |x|*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
lm(y ~ x, data = data2) -> modelo21
lm(y ~ x + x2, data = data2) -> modelo22
stargazer(modelo21, modelo22,
align = TRUE, out = "tabelas/exemplo_heteroskeda.tex")
(tibble(x = runif(1000, -10, 10),
x2 = x^2,
y = 100 + 5*x - 2*x^2 + x*abs(rnorm(length(x), sd = 20))) ->
data2)
png("imagens/exemplo_heteroske.png", width = 940, height = 678, res = 120)
data2 %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + |x|*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
dev.off()
lm(y ~ x, data = data2) -> modelo21
lm(y ~ x + x2, data = data2) -> modelo22
stargazer(modelo21, modelo22,
align = TRUE, out = "tabelas/exemplo_heteroskeda.tex")
modelo21
modelo22
data2 %>%
ggplot(aes(x = x, y = y)) +
geom_point(size = 2, color = cor, alpha = .4) +
theme_minimal() +
labs(title = "y(x) = 100 + 5x - 2x^2 + |x|*resíduo",
subtitle = "Resíduo aleatórios tirados de uma N(0, 20)",
x = "X",
y = "Y")
library(tidymodels)
library(tidyverse)
library(randomForest)
library(magrittr)
library(rpart)
metricas <- readRDS("C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Dados/metricas_reg_houses.Rds")
tune_res <- readRDS("C:/Users/pedro/Desktop/Cava/monografiaRandomForest/R/Dados/modelo_reg_houses.Rds")
(collect_predictions(tune_res) ->
predicoes)
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50)
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, color = cor)) +
geom_histogram(binwidth = 50)
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50)
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50) +
theme(legend.position = "none")
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50) +
geom_vline(xintercept = 0) +
theme(legend.position = "none")
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50) +
geom_vline(size = 1.2, xintercept = 0) +
theme(legend.position = "none")
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif, fill = cor)) +
geom_histogram(binwidth = 50) +
geom_vline(size = 1.2, xintercept = 0) +
theme(legend.position = "none") +
theme_minimal()
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif)) +
geom_histogram(binwidth = 50, fill = cor) +
geom_vline(size = 1.2, xintercept = 0) +
theme(legend.position = "none") +
theme_minimal()
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif)) +
geom_histogram(
aes(y = ..density..),
binwidth = 50, fill = cor) +
geom_vline(size = 1.2, xintercept = 0) +
theme(legend.position = "none") +
theme_minimal()
predicoes %>%
ggplot(aes(x = .pred, y = aluguel)) +
geom_point(color = cor) +
geom_abline(slope = 1, intercept = 0)
predicoes %>%
ggplot(aes(x = .pred, y = aluguel)) +
geom_density_2d(color = cor) +
geom_abline(slope = 1, intercept = 0)
predicoes %>%
ggplot(aes(x = .pred, y = aluguel)) +
geom_density_2d(size = 1.2, color = cor) +
geom_abline(slope = 1, intercept = 0) +
theme_minimal() +
labs(
x = "Valores previstos",
y = "Valor real",
title = "Distribuição conjunta das previsões e erros")
predicoes %>%
ggplot(aes(x = .pred, y = aluguel)) +
geom_density_2d(size = 1.2, color = cor) +
geom_abline(size = 1.2, slope = 1, intercept = 0) +
theme_minimal() +
labs(
x = "Valores previstos",
y = "Valor real",
title = "Distribuição conjunta das previsões e erros")
metricas
metricas %>%
filter(.metric == "mpe") %>%
ggplot(aes(x = min_n, y = mean)) +
geom_line()
metricas %>%
filter(.metric == "mpe") %>%
ggplot(aes(x = min_n, group = min_n, y = mean)) +
geom_boxplot()
metricas %>%
filter(.metric == "mpe") %>%
ggplot(aes(x = min_n, group = min_n, fill = cor, y = mean)) +
geom_boxplot()
cor
pal
metricas %>%
filter(.metric == "mpe") %>%
ggplot(aes(
x = min_n,
group = min_n,
fill = cor,
y = mean)) +
geom_boxplot() +
theme_minimal()
metricas %>%
ggplot(aes(
x = min_n,
group = min_n,
fill = cor,
y = mean)) +
geom_boxplot() +
theme_minimal() +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = min_n,
group = min_n,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
pal
pal <- wes_palette("Cavalcanti2")
cor <- wes_palette("Cavalcanti2") %>%
pluck(1)
library(wesanderson)
pal <- wes_palette("Cavalcanti2")
cor <- wes_palette("Cavalcanti2") %>%
pluck(1)
pal <- wes_palette("Cavalcanti1")
cor <- wes_palette("Cavalcanti1") %>%
pluck(1)
pal <- wes_palette("Cavalcanti1", n = 6)
cor <- wes_palette("Cavalcanti1", n = 6) %>%
pluck(1)
pal <- wes_palette("BottleRocket1", n = 6)
cor <- wes_palette("BottleRocket1", n = 6) %>%
pluck(1)
metricas %>%
ggplot(aes(
x = min_n,
group = min_n,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = trees,
group = min_n,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = trees,
group = trees,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = mtry,
group = mtry,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = min_n,
group = min_n,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
houses
lm(aluguel ~ log(area) + log(quartos) + log(andar) + mobiliado + banheiros,
data = houses) %>%
summary()
lm(aluguel ~ log(area) + log(quartos) + log(andar) + mobiliado + banheiros,
data = houses)
houses
lm(aluguel ~ log(area) + log(quartos) + log(andar + 1) + mobiliado + banheiros,
data = houses) %>%
summary()
modelo %>%
summary()
lm(aluguel ~ log(area) + log(quartos) + log(andar + 1) + mobiliado + banheiros,
data = houses) ->
modelo
modelo %>%
summary()
hist(resid(modelo))
metricas %>%
ggplot(aes(
x = trees,
group = trees,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
metricas %>%
ggplot(aes(
x = mtry,
group = mtry,
fill = .metric,
y = mean)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = pal) +
facet_wrap(~ .metric, scales = "free")
predicoes %>%
summarise(dif = aluguel - .pred) %>%
ggplot(aes(x = dif)) +
geom_histogram(
aes(y = ..density..),
binwidth = 50, fill = cor) +
geom_vline(size = 1.2, xintercept = 0) +
theme(legend.position = "none") +
theme_minimal()
predicoes %>%
summarise(dif = aluguel - .pred)
predicoes %>%
summarise(dif = aluguel - .pred) %$% summary(dif)
